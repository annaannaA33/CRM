давай вместе сделам проект на пайтон. это срм для контроля заявок от клиентов и эфективной обработки заявок. и их обращений на горячую линию или в чат на сайте. 
при старте спрашиваем роль.  от роли зависят доступные функции.функции оператора: создать  заявку, открыть заявку, посмотреть все заявки в втатусе  отктыто, закрыто, выполнено. направить заявку на исполнителя , закрыть выполненную заявку.  
Принимает обращение оператор.  при обращении клиента оператор открывает создает заявку, и заполняет ее. У заявки такие поля: айди(для каждой заявки генерируется уникальный  айди ) , телефон, тип заявки(выбор: серевис, отдел продаж, проблемы с доставкой), источник обращения(выбор: чат на сайте или звонок), описание задачи клиента, исполнитель(выбор:  курьеры, специалист сервиса, консультант по товару отдела продаж), статус, решение дата и  время создания.  При обращении клиента оператор вводит имя, телефон, указывает  тип заявки, указывает источник обращения, описывает что нужно клиенту, назначает исполнителя(как бы направляя на соответствующий отдел), статус при соэранении устанавливается новая, время созания тоже отмечается автоматически. Поле решение оператор не трогает. Далее у оператору распечатывается вся заявка и спрашиваем все ли верно и сохраняем ли? Если да, сохраняем. Если нет, предлагаем заполнить заново заявку. Сохраняем заявки в файле csv , в каждой строке отдельная заявка.   Бывают статусы заявок: активна- при создании, в работе - когда специалист  отдела берет в работу ,  решено - когда специалист пишет решение в заявке, закрыто-после проверки что вопрос клиента решен , закрывает только оператор. 
ТАкже оператор может просмотреть список заявок с разными статусами:
все заявки, решенные, активные, закрытые. 
Если при старте роль указывается - отдел продаж , то высвечивается другое меню. Отображаем список заявок предназначенных для отдела продаж(статус - актавна, ответственный - отдел продаж). предлагаем ввести номер заявки которую хотим открыть.  Если номер внесли правильно, то после высвечивается заявка полностью и предлагаем внести решение заявки, затем предлагаем изменить статус  заявки.  Если такой заявки с указанным номером нет, просим внести заново заявку.  также если пользователь вводит x- выход из пользователя. тогда снова спрашиваем роль или предлагаем нажать exit для выхода из программы.
При выборе роли доставка. Отображаем список заявок предназначенных для отдела доставки(статус - актавна, ответственный - отдел доставки(LOGISTICS_DEPT)). предлагаем ввести номер заявки которую хотим открыть.  Если номер внесли правильно, то после высвечивается заявка полностью и предлагаем внести решение заявки, затем предлагаем изменить статус  заявки.  Если такой заявки с указанным номером нет, просим внести заново заявку.  также если пользователь вводит x- выход из пользователя. тогда снова спрашиваем роль или предлагаем нажать exit для выхода из программы.
При выборе роли сервис. Отображаем список заявок предназначенных для отдела сервиса(статус - актавна, ответственный - SERVICE_DEPT). Дальше сотрудник моет обрабатывать завки. предлагаем ввести номер заявки которую хотим открыть.  Если номер внесли правильно, то после высвечивается заявка полностью и предлагаем внести решение заявки, затем предлагаем изменить статус  заявки.  Если такой заявки с указанным номером нет, просим внести заново заявку.  также если пользователь вводит x- выход из пользователя. тогда снова спрашиваем роль или предлагаем нажать exit для выхода из программы.

подумать про наследственностть классов


'''
    def create_request(self):
                
        # Gather information for the new ticket

        client_name = input("Enter the client name: ")
        client_phone = input("Enter the client phone: ")
        request_type = input("Enter the request type: ")
        source = input("Enter the source: ")
        executor = input("Enter the executor: ")
        description = input("Enter the description: ")
        
        # Create the new ticket
        new_ticket = Ticket(
            ticket_number = Ticket.generate_ticket_number(self),
            client_name = client_name, 
            client_phone = client_phone, 
            request_type = request_type, 
            source = source, 
            executor = executor, 
            description = description)
        return new_ticket
'''    

это срм для контроля заявок от клиентов и эфективной обработки заявок. и их обращений на горячую линию или в чат на сайте. 
при старте спрашиваем роль.  от роли зависят доступные функции.функции оператора: создать  заявку, открыть заявку, посмотреть все заявки в втатусе  отктыто, закрыто, выполнено. направить заявку на исполнителя , закрыть выполненную заявку.  
Принимает обращение оператор.  при обращении клиента оператор открывает создает заявку, и заполняет ее. У заявки такие поля: айди(для каждой заявки генерируется уникальный  айди ) , телефон, тип заявки(выбор: серевис, отдел продаж, проблемы с доставкой), источник обращения(выбор: чат на сайте или звонок), описание задачи клиента, исполнитель(выбор:  курьеры, специалист сервиса, консультант по товару отдела продаж), статус, решение дата и  время создания.  При обращении клиента оператор вводит имя, телефон, указывает  тип заявки, указывает источник обращения, описывает что нужно клиенту, назначает исполнителя(как бы направляя на соответствующий отдел), статус при соэранении устанавливается новая, время созания тоже отмечается автоматически. Поле решение оператор не трогает. Далее у оператору распечатывается вся заявка и спрашиваем все ли верно и сохраняем ли? Если да, сохраняем. Если нет, предлагаем заполнить заново заявку. Сохраняем заявки в файле csv , в каждой строке отдельная заявка.   Бывают статусы заявок: активна- при создании, в работе - когда специалист  отдела берет в работу ,  решено - когда специалист пишет решение в заявке, закрыто-после проверки что вопрос клиента решен , закрывает только оператор. 
ТАкже оператор может просмотреть список заявок с разными статусами:
все заявки, решенные, активные, закрытые. 
Если при старте роль указывается - отдел продаж , то высвечивается другое меню. Отображаем список заявок предназначенных для отдела продаж(статус - актавна, ответственный - отдел продаж). предлагаем ввести номер заявки которую хотим открыть.  Если номер внесли правильно, то после высвечивается заявка полностью и предлагаем внести решение заявки, затем предлагаем изменить статус  заявки.  Если такой заявки с указанным номером нет, просим внести заново заявку.  также если пользователь вводит x- выход из пользователя. тогда снова спрашиваем роль или предлагаем нажать exit для выхода из программы.
При выборе роли доставка. Отображаем список заявок предназначенных для отдела доставки(статус - актавна, ответственный - отдел доставки(LOGISTICS_DEPT)). предлагаем ввести номер заявки которую хотим открыть.  Если номер внесли правильно, то после высвечивается заявка полностью и предлагаем внести решение заявки, затем предлагаем изменить статус  заявки.  Если такой заявки с указанным номером нет, просим внести заново заявку.  также если пользователь вводит x- выход из пользователя. тогда снова спрашиваем роль или предлагаем нажать exit для выхода из программы.
При выборе роли сервис. Отображаем список заявок предназначенных для отдела сервиса(статус - актавна, ответственный - SERVICE_DEPT). Дальше сотрудник моет обрабатывать завки. предлагаем ввести номер заявки которую хотим открыть.  Если номер внесли правильно, то после высвечивается заявка полностью и предлагаем внести решение заявки, затем предлагаем изменить статус  заявки.  Если такой заявки с указанным номером нет, просим внести заново заявку.  также если пользователь вводит x- выход из пользователя. тогда снова спрашиваем роль или предлагаем нажать exit для выхода из программы.


"Представим что есть онлайн магазин товаров. Это срм для сохранения и контроля обработки заявок от клиентов. Обращения возможны из 2 источников: чат и звонок. Киелнты могут обращатся в отдел поддержки по вопросам сервиса, помощи в покупке или доставке. Все заявки принимает оператор и направляет на нужный отдел для обработки. 
Есть несколько ролей с разными возможностями обработки. 
Роль оператор: 
принять заявку, заполнить все поля, сохранить заявку.
просмотреть весь список заявок
изменить заявку
отправить напоминание по заявке исполнителю
на данный момент я предполагаю что есть один оператор в каждом отделе.
оператор может отфильтровать заявки по источнику обращения, по телефону клиента, по ответственному, по стадии обработки.

Роль сотрудник отдела продаж:
просмотреть все заявки направленные на отдел продаж
обработать заявку, внести решение
наяти заявку по номеру

Роль сотрудник отдела сервиса:
просмотреть все заявки направленные на отдел продаж
обработать заявку, внести решение
наяти заявку по номеру
взять в работу

Роль сотрудник отдела логистики:
просмотреть все заявки направленные на отдел продаж
обработать заявку, внести решение
наяти заявку по номеру
При старте программы, спрашивается роль, далее выходит функционал выбранной роли.
Для сохранения данных использую фаил csv
для сохранения данных для отправки использую переменную окружения

https://caniuse.com/?search=reset


pip install requests
pip install python-dotenv

   Sarah
   SUPPORT
   Installation problem
   Issue resolved over the call

   David
   +12125551234
   SERVICE
   Subscription cancellation
   Further details needed

   Jessica
   +447712345678
   SALES
   Sent pricing details

   Kevin
   SERVICE
   Network connectivity issue
   Troubleshooting ongoing

   Rachel
   SUPPORT
   Software update failure
   Updated successfully

    SALES
    Request for demo
    Schedule demo for next week

$ black Operator.py main.py Ticket.py FileManager.py ServiceDepartment.py Salesperson.py RequestType.py DeliveryDepartment.py